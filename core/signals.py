from .models import Order, Review
from django.db.models.signals import post_save, m2m_changed
from django.dispatch import receiver
# –ò–º–ø–æ—Ä—Ç –≤—Å–µ–≥–æ —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
from .telegram_bot import send_telegram_message
from asyncio import run
# –ò–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –∏ id —á–∞—Ç–∞
from django.conf import settings
from django.urls import reverse
from.mistral import is_bad_review

TELEGRAM_BOT_API_KEY = settings.TELEGRAM_BOT_API_KEY
TELEGRAM_USER_ID = settings.TELEGRAM_USER_ID

@receiver(post_save, sender=Review)
def check_review_text(sender, instance, created, **kwargs):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≥—Ä–∞–¥–∞—Ü–∏—è–º
    """
    if created:
        if not is_bad_review(instance.text):
            instance.is_published = True
            instance.save()
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
            message = f"""
*–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞*
*–ò–º—è:* {instance.client_name}
*–¢–µ–∫—Å—Ç:* {instance.text}
*–û—Ü–µ–Ω–∫–∞:* {instance.rating}
*–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ç–∑—ã–≤:* http://127.0.0.1:8000/admin/core/review/{instance.id}/change/

#–æ—Ç–∑—ã–≤
"""
            run(send_telegram_message(TELEGRAM_BOT_API_KEY, TELEGRAM_USER_ID, message))
        
        
        else:
            instance.is_published = False
            instance.save()
            # –í—ã–≤–æ–¥ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª 
            print(f"–û—Ç–∑—ã–≤ '{instance.client_name}' –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∏–∑-–∑–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Å–ª–æ–≤.")



@receiver(m2m_changed, sender=Order.services.through)
def send_telegram_notification(sender, instance, action, **kwargs):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ m2m_changed –¥–ª—è –º–æ–¥–µ–ª–∏ Order.
    –û–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ö–ê–ñ–î–û–ô —É—Å–ª—É–≥–∏ –≤ –∑–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.
    """
    if action == 'post_add' and kwargs.get('pk_set'):
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥
        services = [f"‚ú® {service.name}" for service in instance.services.all()]

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
        appointment_date = instance.appointment_date.strftime("%d.%m.%Y %H:%M") if instance.appointment_date else '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'
        date_created = instance.date_created.strftime("%d.%m.%Y %H:%M")

        # –°–æ–∑–¥–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∞–¥–º–∏–Ω–∫—É —Å fallback
        try:
            admin_path = reverse('admin:core_order_change', args=[instance.id])
            admin_url = f"{settings.BASE_URL}{admin_path}" if hasattr(settings, 'BASE_URL') else f"http://127.0.0.1:8000{admin_path}"
        except:
            admin_url = f"http://127.0.0.1:8000/admin/core/order/{instance.id}/change/"

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = f"""
‚ö° *–ö–í–ê–ù–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï: –ù–û–í–ê–Ø –ó–ê–ü–ò–°–¨* ‚ö°

üîπ *–ö–ª–∏–µ–Ω—Ç:* `{instance.client_name}`
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* `{instance.phone or '–Ω–µ —É–∫–∞–∑–∞–Ω'}`
üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* `{instance.comment or '–Ω–µ —É–∫–∞–∑–∞–Ω'}`

üõ† *–£—Å–ª—É–≥–∏:*
{chr(10).join(services) or '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}

‚è≥ *–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:* `{date_created}`
üë®‚Äçüé® *–ú–∞—Å—Ç–µ—Ä:* `{instance.master.first_name} {instance.master.last_name}`
üìÖ *–î–∞—Ç–∞ –∑–∞–ø–∏—Å–∏:* `{appointment_date}`

üîó *–°—Å—ã–ª–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∫—É:* 
{admin_url}

#–∑–∞–ø–∏—Å—å #{instance.master.last_name.lower()}
-------------------------------------------------------------
        """
        run(send_telegram_message(TELEGRAM_BOT_API_KEY, TELEGRAM_USER_ID, message))